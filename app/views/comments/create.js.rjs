<% if @comment.new_record? %>
  comment = $('#comment');
  comment.prepend("<%= escape_javascript(render 'shared/messages') %>");
  comment.scrollTo();
<% else %>
  <% if @comment.user && @comment.user.facebook? %>
    FB.ui(<%= raw FacebookPublisher.comment_created_hash(truncate_words(@comment.comment), commentable_url(@comment)) %>)
  <% end %>

  $('#newest_comment').after("<%= escape_javascript(render(:partial => 'comments/comment', :formats => [:html], :locals => {:comment => @comment})) %>");
  tinyMCE.activeEditor.setContent('');
  $('#comment-<%= @comment.id.to_s %>').scrollTo();
<% end %>

<% unless configatron.recaptcha_pub_key.blank? %>
  $('#dynamic_recaptcha').each(function(){
    Recaptcha.create('<%= configatron.recaptcha_pub_key %>', this )
  });
<% end %>

if (typeof($.CE.commentCreatedCallback) != 'undefined'){
  $.CE.commentCreatedCallback('<%= @comment.id %>')
}







#if @comment.new_record?
#  page.select('div#comments div.errors').invoke('update', flash[:error])
#  page << "new Effect.Highlight($$('div#comments div.errors')[0]);"
#else
##  if @comment.user && @comment.user.facebook_id
##    page << "CE_Facebooker.showFbFeedForm('', #{FacebookPublisher.create_comment_created(@comment, commentable_url(@comment)).to_json}, function(){})"
##  end
#
#  page.insert_html :after, 'newest_comment', :partial => 'comments/comment.html.haml', :locals => {:comment => @comment, :highlighted => true}
#  page << "tinyMCE.activeEditor.setContent('');"
#  page.select('#emptycomments').invoke('hide')
#end
#
#page.select('#comment_spinner').invoke('hide')
#page << "if($('dynamic_recaptcha')){Recaptcha.create('#{configatron.recaptcha_pub_key}', $('dynamic_recaptcha') )}"
#
#
