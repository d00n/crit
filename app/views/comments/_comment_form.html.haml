- if logged_in? || configatron.allow_anonymous_commenting

  = bootstrap_form_for(:comment, :url => commentable_comments_path(commentable.class.to_s.tableize, commentable), :remote => true, :layout => :horizontal, :html => {:id => 'comment'}) do |f|
    = f.text_area :comment, :rows => 5, :style => 'width: 99%', :class => "rich_text_editor", :help => :comment_character_limit.l

    - if !logged_in? && configatron.recaptcha_pub_key && configatron.recaptcha_priv_key
      = f.text_field :author_name
      = f.text_field :author_email, :required => true

      = f.form_group do
        =f.check_box :notify_by_email, :label => :notify_me_of_follow_ups_via_email.l
        -if commentable.respond_to?(:send_comment_notifications?) && !commentable.send_comment_notifications?
          %p.help-block= :comment_notifications_off.l

      = f.text_field :author_url, :label => :comment_web_site_label.l

      = f.form_group do
        = recaptcha_tags :ajax => true

    = f.form_group :submit_group do
      = f.primary :add_comment.l, data: { disable_with: "Please wait..." }

- else
  .btn-group
    = link_to :log_in_to_leave_a_comment.l, new_commentable_comment_path(commentable.class, commentable.id), :class => 'btn btn-primary'
    = link_to :create_an_account.l, signup_path, :class => 'btn btn-primary'




-#- if logged_in? || configatron.allow_anonymous_commenting
-#  :javascript
-#    function scrollToNewestComment(){
-#      loc = document.location.toString();
-#      if (loc.indexOf("#") != -1){
-#        parts = loc.split('#')
-#        loc = parts[0] + "#newest_comment"
-#      } else {
-#        loc = loc + "#newest_comment";
-#      }
-#      document.location.href = loc;
-#    }
-#
-#  .errors
-#  -#:url => comments_url(commentable.class.to_s.underscore, commentable.id ), :html => {:id => 'new_comment_form', :class => "MainForm"}) do |f|
-#
-#  -#= form_remote_for(:comment, @comment, :loading => "$$('div#comments div.errors')[0].innerHTML = ''; $('comment_spinner').show();", :before => "tinyMCE.activeEditor.save();",  :url => commentable_comments_path(commentable.class.to_s.tableize, commentable) , :html => {:id => 'new_comment_form', :class => "MainForm"}) do |f|
-#  -#  = f.text_area :comment, {:size => "80x5", :class => "rich_text_editor", :style => "width:100%"}
-#
-#
-#  = bootstrap_form_for(:comment, :url => commentable_comments_path(commentable.class.to_s.tableize, commentable), :remote => true, :layout => :horizontal, :html => {:id => 'comment'}) do |f|
-#    = f.text_area :comment, :rows => 5, :style => 'width: 99%', :class => "rich_text_editor", :help => :comment_character_limit.l
-#
-#    - if !logged_in? && configatron.recaptcha_pub_key && configatron.recaptcha_priv_key
-#      .right{:style => 'margin-top:2em;'}= recaptcha_tags :ajax => true
-#      %label{"for"=>"comment[author_name"}
-#        =:name.l
-#        %em="(#{:optional.l})"
-#      = f.text_field :author_name, :size => 35
-#      %label{"for"=>"comment[author_email"}
-#        ="#{:email.l}:"
-#        %em="(#{:comment_author_email_required.l})"
-#      = f.text_field :author_email, :size => 35
-#      %br
-#      %label
-#        =f.check_box :notify_by_email, :style => 'width: 10px;'
-#        =:notify_me_of_follow_ups_via_email.l
-#
-#      %label{"for"=>"comment[author_url"}
-#        =:comment_web_site_label.l
-#        %em="(#{:optional.l})"
-#      = f.text_field :author_url, :size => 35
-#
-#
-#    %p
-#      = submit_tag :add_comment.l
-#      %em=:comment_character_limit.l
-#      = image_tag 'spinner.gif', :plugin => "community_engine", :style => 'display:none;', :id => 'comment_spinner'
-#- else
-#  = link_to :log_in_to_leave_a_comment.l, new_comment_path(commentable.class, commentable.id)
-#  = :or.l
-#  = link_to :create_an_account.l, signup_path
